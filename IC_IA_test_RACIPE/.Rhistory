legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, vjust = 0.5),
axis.text.y = element_text(family = "sans", size = 15),
panel.grid = element_blank())
# browser()
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.png"))
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.pdf"))
d1J <- JSD(t(d1))
d2J <- JSD(t(d2))
dJ <- sapply(1:ncol(d1), function(j){
# j <- JSD(rbind(d1[[j]], d2[[j]]))
t <- t.test(d1[[j]], d2[[j]])
t <- t$p.value
t
})
c(y,round(mean(dJ)))
}) %>% t %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "S2", "p_value"))
plotfunc$p_value <- as.numeric(plotfunc$p_value)
t1 <- plotfunc$S1 %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "Freq"))
plotfunc <- merge(plotfunc, t1, by = "S1", all = T)
# browser()
ggplot(plotfunc, aes(x = reorder(S1, -Freq), y = reorder(S2, Freq), fill = p_value)) + geom_tile(height = 0.95, width = 0.95) + scale_color_viridis_c() +
labs(x = "", y = "") + theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_Pmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_Pmap.png"), width = 5, height = 4)
RACIPE100_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_100")]
RACIPE1000_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_1000")]
RACIPE100_cols <- RACIPE100_cols[!(RACIPE100_cols %in% RACIPE1000_cols)]
MAT100_cols <- colnames(df)[str_detect(colnames(df), "Matlab_100")]
MAT1000_cols <- colnames(df)[str_detect(colnames(df), "Matlab_1000")]
MAT100_cols <- MAT100_cols[!(MAT100_cols %in% MAT1000_cols)]
df <- df %>% mutate(
RACIPE100_Mean = df %>% select(RACIPE100_cols) %>% apply(1, mean),
RACIPE100_Sd = df %>% select(RACIPE100_cols) %>% apply(1, sd),
RACIPE1000_Mean = df %>% select(RACIPE1000_cols) %>% apply(1, mean),
RACIPE1000_Sd = df %>% select(RACIPE1000_cols) %>% apply(1, sd),
Matlab100_Mean = df %>% select(MAT100_cols) %>% apply(1, mean),
Matlab100_Sd = df %>% select(MAT100_cols) %>% apply(1, sd),
Matlab1000_Mean = df %>% select(MAT1000_cols) %>% apply(1, mean),
Matlab1000_Sd = df %>% select(MAT1000_cols) %>% apply(1, sd)
)
d1 <- df %>% select(RACIPE100_Mean, RACIPE1000_Mean, Matlab100_Mean, Matlab1000_Mean) %>%
t %>% JSD %>% data.frame %>% set_colnames(c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
mutate(Simulation = c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
gather(key = "Simulation_2", value = "JSD", -Simulation) %>% mutate(JSD = round(JSD, 3)) %>%
mutate(dummy1 = Simulation_2, dummy2 = Simulation) %>% distinct %>% select(-contains("dummy"))
t1 <- d1$Simulation %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("Simulation", "Freq"))
d1 <- merge(d1, t1, by = "Simulation", all = T)
# browser()
ggplot(d1,aes(x = reorder(Simulation, Freq), y = reorder(Simulation_2, -Freq), fill = JSD)) +
geom_tile(width = 0.95, height = 0.95) +
scale_color_viridis_c() + labs(x = "", y = "") +
theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_heatmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_heatmap.png"), width = 5, height = 4)
setwd("..")
})
setwd("..")
volcs <- lapply(folz, function(x){#browser()
setwd(x)
df <- read.csv(paste0(x, "_summary.csv"))
df <- df[!str_detect(df$State, "NA"), ]
sims <- c("RACIPE_100", "RACIPE_1000", "Matlab_100", "Matlab_1000")
l1 <- list()
count <- 1
for (i in 1:length(sims))
for (j in i:length(sims))
{
l1[[count]] <- sims[c(i,j)]
count <- count + 1
}
plotfunc <- sapply(l1, function(y){
d1 <- df %>% select(contains(y[1]), -contains(paste0(y[1], 0)))
d2 <- df %>% select(contains(y[2]), -contains(paste0(y[2], 0)))
d <- (d1 + 0.0001)/(d2 + 0.0001)
write.csv(d, paste0(x, paste0(y, collapse = "_"), ".csv"))
d <- log2(d)
pVec <- apply(d, 1, function(t){#browser()
if(identical(t[1], t[2]) && identical(t[2],t[3]))
{
return(1)
}
p <- t.test(t)
p$p.value
})
mVec <- apply(d, 1, mean)
Frequency <- apply(d2, 1, mean)
plt <- ggplot() + geom_point(aes(x = mVec, y = -log10(pVec), color = Frequency), size = 2) +
geom_hline(yintercept = -log10(0.05), color = "red", size = 1)+
geom_vline(xintercept = -0.5, linetype = "longdash", size = 1) +
geom_vline(xintercept = 0.5, linetype = "longdash", size = 1) +
scale_color_viridis_c() +
labs(x = "log2 fold change", y = "-log10 p-value") + theme_bw() + xlim(-1,1) +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, vjust = 0.5),
axis.text.y = element_text(family = "sans", size = 15),
panel.grid = element_blank())
# browser()
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.png"))
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.pdf"))
d1J <- JSD(t(d1))
d2J <- JSD(t(d2))
dJ <- sapply(1:ncol(d1), function(j){
# j <- JSD(rbind(d1[[j]], d2[[j]]))
t <- t.test(d1[[j]], d2[[j]])
t <- t$p.value
t
})
c(y,round(mean(dJ)))
}) %>% t %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "S2", "p_value"))
plotfunc$p_value <- as.numeric(plotfunc$p_value)
t1 <- plotfunc$S1 %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "Freq"))
plotfunc <- merge(plotfunc, t1, by = "S1", all = T)
# browser()
ggplot(plotfunc, aes(x = reorder(S1, -Freq), y = reorder(S2, Freq), fill = p_value)) + geom_tile(height = 0.95, width = 0.95) + scale_color_viridis_c() +
labs(x = "", y = "") + theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_Pmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_Pmap.png"), width = 5, height = 4)
RACIPE100_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_100")]
RACIPE1000_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_1000")]
RACIPE100_cols <- RACIPE100_cols[!(RACIPE100_cols %in% RACIPE1000_cols)]
MAT100_cols <- colnames(df)[str_detect(colnames(df), "Matlab_100")]
MAT1000_cols <- colnames(df)[str_detect(colnames(df), "Matlab_1000")]
MAT100_cols <- MAT100_cols[!(MAT100_cols %in% MAT1000_cols)]
df <- df %>% mutate(
RACIPE100_Mean = df %>% select(RACIPE100_cols) %>% apply(1, mean),
RACIPE100_Sd = df %>% select(RACIPE100_cols) %>% apply(1, sd),
RACIPE1000_Mean = df %>% select(RACIPE1000_cols) %>% apply(1, mean),
RACIPE1000_Sd = df %>% select(RACIPE1000_cols) %>% apply(1, sd),
Matlab100_Mean = df %>% select(MAT100_cols) %>% apply(1, mean),
Matlab100_Sd = df %>% select(MAT100_cols) %>% apply(1, sd),
Matlab1000_Mean = df %>% select(MAT1000_cols) %>% apply(1, mean),
Matlab1000_Sd = df %>% select(MAT1000_cols) %>% apply(1, sd)
)
d1 <- df %>% select(RACIPE100_Mean, RACIPE1000_Mean, Matlab100_Mean, Matlab1000_Mean) %>%
t %>% JSD %>% data.frame %>% set_colnames(c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
mutate(Simulation = c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
gather(key = "Simulation_2", value = "JSD", -Simulation) %>% mutate(JSD = round(JSD, 3)) %>%
mutate(dummy1 = Simulation_2, dummy2 = Simulation) %>% distinct %>% select(-contains("dummy"))
t1 <- d1$Simulation %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("Simulation", "Freq"))
d1 <- merge(d1, t1, by = "Simulation", all = T)
# browser()
ggplot(d1,aes(x = reorder(Simulation, Freq), y = reorder(Simulation_2, -Freq), fill = JSD)) +
geom_tile(width = 0.95, height = 0.95) +
scale_color_viridis_c() + labs(x = "", y = "") +
theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_heatmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_heatmap.png"), width = 5, height = 4)
setwd("..")
})
getwd()
setwd("Re-sims/Original/")
volcs <- lapply(folz, function(x){#browser()
setwd(x)
df <- read.csv(paste0(x, "_summary.csv"))
df <- df[!str_detect(df$State, "NA"), ]
sims <- c("RACIPE_100", "RACIPE_1000", "Matlab_100", "Matlab_1000")
l1 <- list()
count <- 1
for (i in 1:length(sims))
for (j in i:length(sims))
{
l1[[count]] <- sims[c(i,j)]
count <- count + 1
}
plotfunc <- sapply(l1, function(y){
d1 <- df %>% select(contains(y[1]), -contains(paste0(y[1], 0)))
d2 <- df %>% select(contains(y[2]), -contains(paste0(y[2], 0)))
d <- (d1 + 0.0001)/(d2 + 0.0001)
write.csv(d, paste0(x, paste0(y, collapse = "_"), ".csv"))
d <- log2(d)
pVec <- apply(d, 1, function(t){#browser()
if(identical(t[1], t[2]) && identical(t[2],t[3]))
{
return(1)
}
p <- t.test(t)
p$p.value
})
mVec <- apply(d, 1, mean)
Frequency <- apply(d2, 1, mean)
plt <- ggplot() + geom_point(aes(x = mVec, y = -log10(pVec), color = Frequency), size = 2) +
geom_hline(yintercept = -log10(0.05), color = "red", size = 1)+
geom_vline(xintercept = -0.5, linetype = "longdash", size = 1) +
geom_vline(xintercept = 0.5, linetype = "longdash", size = 1) +
scale_color_viridis_c() +
labs(x = "log2 fold change", y = "-log10 p-value") + theme_bw() + xlim(-1,1) +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, vjust = 0.5),
axis.text.y = element_text(family = "sans", size = 15),
panel.grid = element_blank())
# browser()
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.png"))
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.pdf"))
d1J <- JSD(t(d1))
d2J <- JSD(t(d2))
dJ <- sapply(1:ncol(d1), function(j){
# j <- JSD(rbind(d1[[j]], d2[[j]]))
t <- t.test(d1[[j]], d2[[j]])
t <- t$p.value
t
})
c(y,round(mean(dJ)))
}) %>% t %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "S2", "p_value"))
plotfunc$p_value <- as.numeric(plotfunc$p_value)
t1 <- plotfunc$S1 %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "Freq"))
plotfunc <- merge(plotfunc, t1, by = "S1", all = T)
# browser()
ggplot(plotfunc, aes(x = reorder(S1, -Freq), y = reorder(S2, Freq), fill = p_value)) + geom_tile(height = 0.95, width = 0.95) + scale_color_viridis_c() +
labs(x = "", y = "") + theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_Pmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_Pmap.png"), width = 5, height = 4)
RACIPE100_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_100")]
RACIPE1000_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_1000")]
RACIPE100_cols <- RACIPE100_cols[!(RACIPE100_cols %in% RACIPE1000_cols)]
MAT100_cols <- colnames(df)[str_detect(colnames(df), "Matlab_100")]
MAT1000_cols <- colnames(df)[str_detect(colnames(df), "Matlab_1000")]
MAT100_cols <- MAT100_cols[!(MAT100_cols %in% MAT1000_cols)]
df <- df %>% mutate(
RACIPE100_Mean = df %>% select(RACIPE100_cols) %>% apply(1, mean),
RACIPE100_Sd = df %>% select(RACIPE100_cols) %>% apply(1, sd),
RACIPE1000_Mean = df %>% select(RACIPE1000_cols) %>% apply(1, mean),
RACIPE1000_Sd = df %>% select(RACIPE1000_cols) %>% apply(1, sd),
Matlab100_Mean = df %>% select(MAT100_cols) %>% apply(1, mean),
Matlab100_Sd = df %>% select(MAT100_cols) %>% apply(1, sd),
Matlab1000_Mean = df %>% select(MAT1000_cols) %>% apply(1, mean),
Matlab1000_Sd = df %>% select(MAT1000_cols) %>% apply(1, sd)
)
d1 <- df %>% select(RACIPE100_Mean, RACIPE1000_Mean, Matlab100_Mean, Matlab1000_Mean) %>%
t %>% JSD %>% data.frame %>% set_colnames(c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
mutate(Simulation = c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
gather(key = "Simulation_2", value = "JSD", -Simulation) %>% mutate(JSD = round(JSD, 3)) %>%
mutate(dummy1 = Simulation_2, dummy2 = Simulation) %>% distinct %>% select(-contains("dummy"))
t1 <- d1$Simulation %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("Simulation", "Freq"))
d1 <- merge(d1, t1, by = "Simulation", all = T)
# browser()
ggplot(d1,aes(x = reorder(Simulation, Freq), y = reorder(Simulation_2, -Freq), fill = JSD)) +
geom_tile(width = 0.95, height = 0.95) +
scale_color_viridis_c() + labs(x = "", y = "") +
theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_heatmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_heatmap.png"), width = 5, height = 4)
setwd("..")
})
?try
try(mean(c(1,1,2,3,4,2,3,4,4,NA)))
x <- try(mean(c(1,1,2,3,4,2,3,4,4,NA)))
?stop
d <- function(x){
stop("test_error")
}
x <- try(d(1))
x
x[1]
names(x)
class(x)
t.test(c(1,2,3))
y <- t.test(c(1,2,3))
class(y)
getwd()
setwd("..")
volcs <- lapply(folz, function(x){#browser()
setwd(x)
df <- read.csv(paste0(x, "_summary.csv"))
df <- df[!str_detect(df$State, "NA"), ]
sims <- c("RACIPE_100", "RACIPE_1000", "Matlab_100", "Matlab_1000")
l1 <- list()
count <- 1
for (i in 1:length(sims))
for (j in i:length(sims))
{
l1[[count]] <- sims[c(i,j)]
count <- count + 1
}
plotfunc <- sapply(l1, function(y){
d1 <- df %>% select(contains(y[1]), -contains(paste0(y[1], 0)))
d2 <- df %>% select(contains(y[2]), -contains(paste0(y[2], 0)))
d <- (d1 + 0.0001)/(d2 + 0.0001)
write.csv(d, paste0(x, paste0(y, collapse = "_"), ".csv"))
d <- log2(d)
pVec <- apply(d, 1, function(t){#browser()
p <- try(t.test(t))
if (class(p) == "htest")
p$p.value
else
0.05
})
mVec <- apply(d, 1, mean)
Frequency <- apply(d2, 1, mean)
plt <- ggplot() + geom_point(aes(x = mVec, y = -log10(pVec), color = Frequency), size = 2) +
geom_hline(yintercept = -log10(0.05), color = "red", size = 1)+
geom_vline(xintercept = -0.5, linetype = "longdash", size = 1) +
geom_vline(xintercept = 0.5, linetype = "longdash", size = 1) +
scale_color_viridis_c() +
labs(x = "log2 fold change", y = "-log10 p-value") + theme_bw() + xlim(-1,1) +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, vjust = 0.5),
axis.text.y = element_text(family = "sans", size = 15),
panel.grid = element_blank())
# browser()
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.png"))
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.pdf"))
d1J <- JSD(t(d1))
d2J <- JSD(t(d2))
dJ <- sapply(1:ncol(d1), function(j){
# j <- JSD(rbind(d1[[j]], d2[[j]]))
t <- t.test(d1[[j]], d2[[j]])
t <- t$p.value
t
})
c(y,round(mean(dJ)))
}) %>% t %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "S2", "p_value"))
plotfunc$p_value <- as.numeric(plotfunc$p_value)
t1 <- plotfunc$S1 %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "Freq"))
plotfunc <- merge(plotfunc, t1, by = "S1", all = T)
# browser()
ggplot(plotfunc, aes(x = reorder(S1, -Freq), y = reorder(S2, Freq), fill = p_value)) + geom_tile(height = 0.95, width = 0.95) + scale_color_viridis_c() +
labs(x = "", y = "") + theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_Pmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_Pmap.png"), width = 5, height = 4)
RACIPE100_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_100")]
RACIPE1000_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_1000")]
RACIPE100_cols <- RACIPE100_cols[!(RACIPE100_cols %in% RACIPE1000_cols)]
MAT100_cols <- colnames(df)[str_detect(colnames(df), "Matlab_100")]
MAT1000_cols <- colnames(df)[str_detect(colnames(df), "Matlab_1000")]
MAT100_cols <- MAT100_cols[!(MAT100_cols %in% MAT1000_cols)]
df <- df %>% mutate(
RACIPE100_Mean = df %>% select(RACIPE100_cols) %>% apply(1, mean),
RACIPE100_Sd = df %>% select(RACIPE100_cols) %>% apply(1, sd),
RACIPE1000_Mean = df %>% select(RACIPE1000_cols) %>% apply(1, mean),
RACIPE1000_Sd = df %>% select(RACIPE1000_cols) %>% apply(1, sd),
Matlab100_Mean = df %>% select(MAT100_cols) %>% apply(1, mean),
Matlab100_Sd = df %>% select(MAT100_cols) %>% apply(1, sd),
Matlab1000_Mean = df %>% select(MAT1000_cols) %>% apply(1, mean),
Matlab1000_Sd = df %>% select(MAT1000_cols) %>% apply(1, sd)
)
d1 <- df %>% select(RACIPE100_Mean, RACIPE1000_Mean, Matlab100_Mean, Matlab1000_Mean) %>%
t %>% JSD %>% data.frame %>% set_colnames(c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
mutate(Simulation = c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
gather(key = "Simulation_2", value = "JSD", -Simulation) %>% mutate(JSD = round(JSD, 3)) %>%
mutate(dummy1 = Simulation_2, dummy2 = Simulation) %>% distinct %>% select(-contains("dummy"))
t1 <- d1$Simulation %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("Simulation", "Freq"))
d1 <- merge(d1, t1, by = "Simulation", all = T)
# browser()
ggplot(d1,aes(x = reorder(Simulation, Freq), y = reorder(Simulation_2, -Freq), fill = JSD)) +
geom_tile(width = 0.95, height = 0.95) +
scale_color_viridis_c() + labs(x = "", y = "") +
theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_heatmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_heatmap.png"), width = 5, height = 4)
setwd("..")
})
volcs <- lapply(folz, function(x){#browser()
setwd(x)
df <- read.csv(paste0(x, "_summary.csv"))
df <- df[!str_detect(df$State, "NA"), ]
sims <- c("RACIPE_100", "RACIPE_1000", "Matlab_100", "Matlab_1000")
l1 <- list()
count <- 1
for (i in 1:length(sims))
for (j in i:length(sims))
{
l1[[count]] <- sims[c(i,j)]
count <- count + 1
}
plotfunc <- sapply(l1, function(y){
d1 <- df %>% select(contains(y[1]), -contains(paste0(y[1], 0)))
d2 <- df %>% select(contains(y[2]), -contains(paste0(y[2], 0)))
d <- (d1 + 0.0001)/(d2 + 0.0001)
write.csv(d, paste0(x, paste0(y, collapse = "_"), ".csv"))
d <- log2(d)
pVec <- apply(d, 1, function(t){#browser()
p <- try(t.test(t))
if (class(p) == "htest")
p$p.value
else
0.05
})
mVec <- apply(d, 1, mean)
Frequency <- apply(d2, 1, mean)
plt <- ggplot() + geom_point(aes(x = mVec, y = -log10(pVec), color = Frequency), size = 2) +
geom_hline(yintercept = -log10(0.05), color = "red", size = 1)+
geom_vline(xintercept = -0.5, linetype = "longdash", size = 1) +
geom_vline(xintercept = 0.5, linetype = "longdash", size = 1) +
scale_color_viridis_c() +
labs(x = "log2 fold change", y = "-log10 p-value") + theme_bw() + xlim(-1,1) +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, vjust = 0.5),
axis.text.y = element_text(family = "sans", size = 15),
panel.grid = element_blank(),
panel.border = element_rect(size = 2))
# browser()
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.png"))
ggsave(paste0(x, paste0(y, collapse = "_"), "_volcano.pdf"))
d1J <- JSD(t(d1))
d2J <- JSD(t(d2))
dJ <- sapply(1:ncol(d1), function(j){
# j <- JSD(rbind(d1[[j]], d2[[j]]))
t <- t.test(d1[[j]], d2[[j]])
t <- t$p.value
t
})
c(y,round(mean(dJ)))
}) %>% t %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "S2", "p_value"))
plotfunc$p_value <- as.numeric(plotfunc$p_value)
t1 <- plotfunc$S1 %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("S1", "Freq"))
plotfunc <- merge(plotfunc, t1, by = "S1", all = T)
# browser()
ggplot(plotfunc, aes(x = reorder(S1, -Freq), y = reorder(S2, Freq), fill = p_value)) + geom_tile(height = 0.95, width = 0.95) + scale_color_viridis_c() +
labs(x = "", y = "") + theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_Pmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_Pmap.png"), width = 5, height = 4)
RACIPE100_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_100")]
RACIPE1000_cols <- colnames(df)[str_detect(colnames(df), "RACIPE_1000")]
RACIPE100_cols <- RACIPE100_cols[!(RACIPE100_cols %in% RACIPE1000_cols)]
MAT100_cols <- colnames(df)[str_detect(colnames(df), "Matlab_100")]
MAT1000_cols <- colnames(df)[str_detect(colnames(df), "Matlab_1000")]
MAT100_cols <- MAT100_cols[!(MAT100_cols %in% MAT1000_cols)]
df <- df %>% mutate(
RACIPE100_Mean = df %>% select(RACIPE100_cols) %>% apply(1, mean),
RACIPE100_Sd = df %>% select(RACIPE100_cols) %>% apply(1, sd),
RACIPE1000_Mean = df %>% select(RACIPE1000_cols) %>% apply(1, mean),
RACIPE1000_Sd = df %>% select(RACIPE1000_cols) %>% apply(1, sd),
Matlab100_Mean = df %>% select(MAT100_cols) %>% apply(1, mean),
Matlab100_Sd = df %>% select(MAT100_cols) %>% apply(1, sd),
Matlab1000_Mean = df %>% select(MAT1000_cols) %>% apply(1, mean),
Matlab1000_Sd = df %>% select(MAT1000_cols) %>% apply(1, sd)
)
d1 <- df %>% select(RACIPE100_Mean, RACIPE1000_Mean, Matlab100_Mean, Matlab1000_Mean) %>%
t %>% JSD %>% data.frame %>% set_colnames(c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
mutate(Simulation = c("RACIPE100", "RACIPE1000", "Matlab100", "Matlab1000")) %>%
gather(key = "Simulation_2", value = "JSD", -Simulation) %>% mutate(JSD = round(JSD, 3)) %>%
mutate(dummy1 = Simulation_2, dummy2 = Simulation) %>% distinct %>% select(-contains("dummy"))
t1 <- d1$Simulation %>% table %>% data.frame(stringsAsFactors = F) %>% set_colnames(c("Simulation", "Freq"))
d1 <- merge(d1, t1, by = "Simulation", all = T)
# browser()
ggplot(d1,aes(x = reorder(Simulation, Freq), y = reorder(Simulation_2, -Freq), fill = JSD)) +
geom_tile(width = 0.95, height = 0.95) +
scale_color_viridis_c() + labs(x = "", y = "") +
theme_bw() +
theme(axis.title = element_text(family = "sans", size = 20, face = "bold"),
legend.title = element_text(family = "sans", size = 20, face = "bold"),
legend.text = element_text(family = "sans", size = 15, face = "bold"),
axis.text.x = element_text(angle = 90, family = "sans", size = 15, face = "bold"),
axis.text.y = element_text(family = "sans", size = 15, face = "bold"),
panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank())
ggsave(filename = paste0(x, "_heatmap.pdf"), width = 5, height = 4)
ggsave(filename = paste0(x, "_heatmap.png"), width = 5, height = 4)
setwd("..")
})
