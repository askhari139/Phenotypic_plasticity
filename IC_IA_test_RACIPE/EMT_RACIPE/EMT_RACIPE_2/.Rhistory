nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[[-1]] <- 2^nfull[[-1]]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:8])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
dummy <- sapply(folz, mat_discret)
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 0:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:8])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
folz <- folz[-which(folz == "RACIPE")]
folz <- list.dirs(".", recursive = F) %>% str_remove("./")
folz <- folz[-which(folz == "RACIPE")]
dummy <- sapply(folz, mat_discret)
getwd()
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 0:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
if(x != "EMT_RACIPE_1")
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:8])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
dummy <- sapply(folz, mat_discret)
getwd()
setwd("..")
x <- "EMT_RACIPE_2"
setwd(x)
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
if(x != "EMT_RACIPE_1")
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:8])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
setwd("..")
getwd()
folz <- folz[-1]
dummy <- sapply(folz, mat_discret)
getwd()
setwd("..")
mat_discret("NRF2")
getwd()
setwd("..")
mat_discret(NRF2)
mat_discret("NRF2")
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 1:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
if(x != "EMT_RACIPE_1")
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:8])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
mat_discret("GRHL2")
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 1:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "RDS")
if (x != "EMT_RACIPE_1" && x != "GRHL2_0" && length(f)){
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
}
else{
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
}
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:length(genes)])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
folz <- list.dirs(".", recursive = F) %>% str_remove("./")
folz <- folz[-which(folz == "RACIPE")]
dummy <- sapply(folz, mat_discret)
getwd()
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 1:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "RDS")
if (x != "EMT_RACIPE_1" && x != "GRHL2_0"){
if(length(f)) {
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
}
else{
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss1000.csv") %>% read.csv
}
}
else
return(0)
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:length(genes)])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
folz <- list.dirs(".", recursive = F) %>% str_remove("./")
folz <- folz[-which(folz == "RACIPE")]
dummy <- sapply(folz, mat_discret)
getwd()
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 1:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "RDS")
if (x != "EMT_RACIPE_1" && x != "GRHL2_0"){
if(length(f)) {
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
}
else{
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss1000.csv") %>% read.csv
}
}
else
{
setwd("..")
return(0)
}
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:length(genes)])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
folz <- list.dirs(".", recursive = F) %>% str_remove("./")
folz <- folz[-which(folz == "RACIPE")]
dummy <- sapply(folz, mat_discret)
getwd()
x <- "EMT_RACIPE_2"
f <- list.files(".", "RDS")
if (x != "EMT_RACIPE_1" && x != "GRHL2_0"){
if(length(f)) {
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
}
else{
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss1000.csv") %>% read.csv
}
}
setwd("../../")
getwd()
dummy <- sapply(folz, mat_discret)
getwd
getwd()
x <- "GRHL2_1"
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss1000.csv") %>% read.csv
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){browser()
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:length(genes)])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
genes
mat_discret <- function(folder)
{
setwd(folder)
folders <- paste0(folder, "_", 1:2)
dummy <- sapply(folders, function(x){#browser()
setwd(x)
f <- list.files(".", "ss1000")
if (x != "EMT_RACIPE_1" && x != "GRHL2_0"){
if(length(f)) {
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss_1000.csv") %>% read.csv
topo_file <- paste0(x, ".topo")
topo <- read.delim(topo_file, sep = " ", stringsAsFactors = F)
if (ncol(topo) != 3)
topo <- read.delim(topo_file, sep = "\t", stringsAsFactors = F)
genes <- c(topo[[1]], topo[[2]]) %>% unique %>% str_replace_all("-", "")
colnames(nfull) <- colnames(nfull) %>% str_replace_all("-", "")
nfull[, -1] <- 2^nfull[, -1]
colnames(ss) <- c("ParameterIndex", genes)
ss <- ss %>% select(colnames(nfull))
write.csv(ss, paste0(x, "_ss.csv"))
colnames(ss1000) <- c("ParameterIndex", genes)
ss1000 <- ss1000 %>% select(colnames(nfull))
write.csv(ss1000, paste0(x, "_ss1000.csv"))
}
else{
nfull <- paste0(x, "_nfull_mat.csv") %>% read.csv
ss <- paste0(x, "_ss.csv") %>% read.csv
ss1000 <- paste0(x, "_ss1000.csv") %>% read.csv
}
}
else
{
setwd("..")
return(0)
}
df_list <- list(RACIPE = nfull, MAT100 = ss, MAT1000 = ss1000)
discrete_df_list <- lapply(df_list, function(df1){browser()
df1_z <- cbind.data.frame(df1$ParameterIndex, lapply(df1[, -1], zCal) %>% reduce(cbind.data.frame))
df1_d <- cbind.data.frame(PI = df1_z[[1]], lapply(df1_z[, -1], discretize) %>% reduce(cbind.data.frame))
df1_d <- df1_d[[1]] %>% table %>% data.frame %>% set_colnames(c("PI", "Count")) %>% merge(df1_d, by = "PI", all = T)
df1_d$Count <- 1/df1_d$Count
df1_f <- df1_d %>% select(-PI) %>% group_by_at(vars(-Count)) %>% summarise(Freq = sum(Count)/sum(df1_d$Count))
df1_f$State <- paste0(data.frame(t(df1_f[, 1:(ncol(df1_f)-1)])))
df1_f <- df1_f  %>% ungroup()%>% select(State, Freq)
if(nrow(df1_f) > 2000)
{
df1_f <- df1_f[which(df1_f$Freq > 0.1*(max(df1_f$Freq))),]
}
df1_f
})
saveRDS(discrete_df_list, paste0(x, "_dfs.RDS"))
setwd("..")
})
setwd("..")
}
setwd("E:/Re-sims/Original")
dummy <- sapply(folz, mat_discret)
getwd()
